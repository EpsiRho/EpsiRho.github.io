<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Windows on Epsi&#39;s Den</title>
        <link>https://epsirho.com/tags/windows/</link>
        <description>Recent content in Windows on Epsi&#39;s Den</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 24 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://epsirho.com/tags/windows/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Melon Media Server Devlog 1</title>
        <link>https://epsirho.com/p/mms-dl1/</link>
        <pubDate>Wed, 24 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>https://epsirho.com/p/mms-dl1/</guid>
        <description>&lt;img src="https://epsirho.com/p/mms-dl1/mms-3.png" alt="Featured image of post Melon Media Server Devlog 1" /&gt;&lt;p&gt;For the last 2 years I&amp;rsquo;ve been acquiring songs I like in as high quality as I can find and saving them locally. This started when spotify started removing music I liked such as Exile Vilify. I wanted to have my own stash of music so I wouldn&amp;rsquo;t loose access to the songs that mean the most to me. I&amp;rsquo;ve been using Plex to listen to my local library ever since, but Plex has so many issues that bother me. I&amp;rsquo;ve looked into other options like Jellyfin, but all the big media servers seem to have tacked on music as an after thought. I want it to be better and I want more control. So now I&amp;rsquo;m making Melon, the music focused media player.&lt;/p&gt;
&lt;p&gt;This project started in May of 2023, with an experimental scanner. I toyed with lots of options for databases, along with what to store and how. I ended up with MongoDB, as it&amp;rsquo;s json-like document system is super powerful for this use case. The Melon Scanner combs recursively through the folders you specify logging every music file and .lrc file. It gets the track information from the music file metadata, so you&amp;rsquo;ll want to use a tool like &lt;a class=&#34;link&#34; href=&#34;https://picard.musicbrainz.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MusicBrainz Picard&lt;/a&gt;. MusicBrainz&amp;rsquo;s data is what I&amp;rsquo;m modeling off of, so support for it&amp;rsquo;s metadata tags will be in Melon. Below is an example of a Track in the db.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://epsirho.com/p/mms-dl1/mms-1.png&#34;
	width=&#34;351&#34;
	height=&#34;813&#34;
	srcset=&#34;https://epsirho.com/p/mms-dl1/mms-1_hu48805c5d947e1a7ba7841c5f78fed65a_87780_480x0_resize_box_3.png 480w, https://epsirho.com/p/mms-dl1/mms-1_hu48805c5d947e1a7ba7841c5f78fed65a_87780_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;A Track object from Melon&amp;rsquo;s MongoDB databse&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;43&#34;
		data-flex-basis=&#34;103px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;After getting it mostly working (it didn&amp;rsquo;t actually, I&amp;rsquo;ve had to fix that scanner code a million times later) I created a nice UI to allow for initial setup and control of the database. This UI has gone through many stages but I&amp;rsquo;m really happy with the current result. A headless mode also exists now if you don&amp;rsquo;t want to run with the UI.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://epsirho.com/p/mms-dl1/mms-2.png&#34;
	width=&#34;1099&#34;
	height=&#34;184&#34;
	srcset=&#34;https://epsirho.com/p/mms-dl1/mms-2_hu334531e1121cc74fddb92e662b5debd0_22021_480x0_resize_box_3.png 480w, https://epsirho.com/p/mms-dl1/mms-2_hu334531e1121cc74fddb92e662b5debd0_22021_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;A screenshot of Melon&amp;rsquo;s scanner progress view&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;597&#34;
		data-flex-basis=&#34;1433px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve since started learning ASP.NET and creating a web API for clients to interact with. I&amp;rsquo;ve got lots of work done, and most of the main endpoints such as search, playlists, and play statistics are all pretty much done. But i&amp;rsquo;ve got quite a few more things to finish. Currently I&amp;rsquo;m working on endpoints to allow updating track/album/artist info, but I&amp;rsquo;ve also got endpoints like recommendations, ratings, and user friending to get done. The project is awhile off, probably a few more months to finish the server.&lt;/p&gt;
&lt;p&gt;I plan on creating a Windows and iOS application for v1 release. I&amp;rsquo;d also like other Apple device apps like MacOS and tvOS. I don&amp;rsquo;t own an android phone, so I&amp;rsquo;m not creating an app for it myself. A friend of mine has been working on one at the same time as I&amp;rsquo;m creating the server, which has been a huge help in testing and modeling how things will work. In the end, I want it to be accessible for any developer to make apps for melon if they&amp;rsquo;d like.&lt;/p&gt;
&lt;p&gt;All my previous projects have been open source and free, however I&amp;rsquo;m trying to think of a good way to make some money from this project. It&amp;rsquo;s taken so much effort and I&amp;rsquo;m really proud of it, and I think it&amp;rsquo;ll be worth the price. So the plan right now is the Melon server code will be open and anyone can grab a build of the server to spin up themselves, but the apps will either be paid, have a free trial, or have some features locked behind a pro version. I&amp;rsquo;ve thought about making the code for the apps open too, so if you don&amp;rsquo;t want to pay or just want to try it out first, you can build it yourself. I&amp;rsquo;m not set on any of these ideas, nor the price. I do know that it will NOT be a subscription, just a one time payment.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll talk more about features and pricing when the time comes. I mostly wanted to make this blog post to show I&amp;rsquo;m alive and working on something big. I&amp;rsquo;ll likely post more devlogs here and there, and I&amp;rsquo;ll announce on my socials when it&amp;rsquo;s time for release!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Discord Data Package Explore</title>
        <link>https://epsirho.com/p/discord-dpe/</link>
        <pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate>
        
        <guid>https://epsirho.com/p/discord-dpe/</guid>
        <description>&lt;img src="https://epsirho.com/p/discord-dpe/ddpe.png" alt="Featured image of post Discord Data Package Explore" /&gt;&lt;p&gt;This is a small little application to view the information stored in a Discord Data Package. This is to help users easily explore the data discord has on them, as it can be hard for normal users to comb through large text and json files.&lt;/p&gt;
&lt;p&gt;You can find the code and download on &lt;a class=&#34;link&#34; href=&#34;https://github.com/EpsiRho/Discord-Data-Package-Explorer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Pushed v1.0.1 to fix an odd COM related crash in newer Win11 versions.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Fluff</title>
        <link>https://epsirho.com/p/fluff/</link>
        <pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate>
        
        <guid>https://epsirho.com/p/fluff/</guid>
        <description>&lt;img src="https://raw.githubusercontent.com/EpsiRho/Fluff/main/1.png" alt="Featured image of post Fluff" /&gt;&lt;p&gt;A beautiful, native windows app for e926/e621! View, search, and download posts submitted by other users, and submit your own.&lt;/p&gt;
&lt;p&gt;This was a fun project I used to deep dive into learning UWP and making better UIs. It got pretty far along, but I&amp;rsquo;ll likely no longer be updating it. It does still mostly work despite a few bugs, I may go fix them at some point but I don&amp;rsquo;t plan to. I&amp;rsquo;m pretty proud of the result, especially the custom control behavior I made for the upload page.&lt;/p&gt;
&lt;p&gt;If you want to check this out, it&amp;rsquo;s availible on &lt;a class=&#34;link&#34; href=&#34;https://github.com/EpsiRho/Fluff&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt; and the &lt;a class=&#34;link&#34; href=&#34;https://apps.microsoft.com/detail/9NJRHG6FVKL9?rtc=1&amp;amp;hl=en-us&amp;amp;gl=US&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Microsoft Store&lt;/a&gt;. Don&amp;rsquo;t worry, it starts in safe mode! You have to enable NSFW content in the settings if that&amp;rsquo;s what you&amp;rsquo;re looking for :P&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Wordle Offline</title>
        <link>https://epsirho.com/p/wordle/</link>
        <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://epsirho.com/p/wordle/</guid>
        <description>&lt;img src="https://epsirho.com/p/wordle/wordle.png" alt="Featured image of post Wordle Offline" /&gt;&lt;p&gt;I made this project cause I was having fun with wordle and wanted to play more than once a day. It&amp;rsquo;s pretty simple, works the same as the Wordle website does.&lt;/p&gt;
&lt;p&gt;The code and downloaded are both up on &lt;a class=&#34;link&#34; href=&#34;https://github.com/EpsiRho/Wordle-Offline&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Horizon File Transfer</title>
        <link>https://epsirho.com/p/horizon/</link>
        <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://epsirho.com/p/horizon/</guid>
        <description>&lt;img src="https://epsirho.com/p/horizon/horizon.png" alt="Featured image of post Horizon File Transfer" /&gt;&lt;p&gt;This was the first real app I developed. I started the project because at the time, Discord&amp;rsquo;s upload limit was 8mb and that was never enough to send files to my friends. So I created horizon to give me infinite upload limit and allow easy transfers to my contacts.&lt;/p&gt;
&lt;p&gt;Check it out on &lt;a class=&#34;link&#34; href=&#34;https://github.com/EpsiRho/Horizon?tab=readme-ov-file&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt; or the &lt;a class=&#34;link&#34; href=&#34;https://apps.microsoft.com/detail/9NLF1LS7Q6J6?hl=en-US&amp;amp;gl=US&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Microsoft Store&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>C&#43;&#43; UIKit</title>
        <link>https://epsirho.com/p/cppuikit/</link>
        <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
        
        <guid>https://epsirho.com/p/cppuikit/</guid>
        <description>&lt;p&gt;This was a fun project I worked on to help me prototype console tools quicker and allow me to make them look and feel nice. I worked on it from Sept 2020 to Feb 2021. It was made for windows, and while some features might work on other operating systems a few will certainly not, such as the cursor menu.&lt;/p&gt;
&lt;p&gt;Full documentation is available as well as a demo application that showcases many of the features. You can find both of those things on the &lt;a class=&#34;link&#34; href=&#34;https://github.com/EpsiRho/UIKit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github Repo&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
